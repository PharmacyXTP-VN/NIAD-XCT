"use client";

import Image from "next/image";
import { useKeenSlider } from "keen-slider/react";
import "keen-slider/keen-slider.min.css";
import { useRef, useEffect } from "react";

const newsList = [
  {
    title: "Ra m·∫Øt xe ch·ªü ti·ªÅn ch·ªëng ƒë·∫°n phi√™n b·∫£n 2025",
    description: "D√≤ng xe m·ªõi ƒë·∫°t ti√™u chu·∫©n EN1063 c·∫•p ƒë·ªô B6 ch·ªëng ƒë·∫°n.",
    image: "/images/news/test2.png",
    date: "12/05/2025",
  },
  {
    title: "K√Ω k·∫øt h·ª£p t√°c v·ªõi ng√¢n h√†ng qu·ªëc t·∫ø",
    description: "Cung c·∫•p 50 xe v·∫≠n chuy·ªÉn ti·ªÅn cho h·ªá th·ªëng ATM to√†n qu·ªëc.",
    image: "/images/news/test2.png",
    date: "05/05/2025",
  },
  {
    title: "H·ªôi th·∫£o ‚ÄúAn ninh v·∫≠n chuy·ªÉn t√†i ch√≠nh 4.0‚Äù",
    description: "Gi·∫£i ph√°p t√≠ch h·ª£p GPS, camera AI v√† c·∫£nh b√°o x√¢m nh·∫≠p.",
    image: "/images/news/test2.png",
    date: "25/04/2025",
  },
  {
    title: "TƒÉng c∆∞·ªùng b·∫£o m·∫≠t xe v·∫≠n chuy·ªÉn ti·ªÅn",
    description: "Trang b·ªã kh√≥a sinh tr·∫Øc h·ªçc v√† m√£ h√≥a d·ªØ li·ªáu ƒë∆∞·ªùng truy·ªÅn.",
    image: "/images/news/test2.png",
    date: "20/04/2025",
  },
];

const awards = [
  "/images/award1.jpg",
  "/images/award1.jpg",
  "/images/award1.jpg",
  "/images/award1.jpg",
  "/images/award1.jpg",
  "/images/award1.jpg",
];

export default function NewsSection() {
  const sliderRef = useRef<HTMLDivElement | null>(null);
  const [sliderInstanceRef, slider] = useKeenSlider<HTMLDivElement>({
    loop: true,
    slides: {
      perView: 3,
      spacing: 20,
    },
    breakpoints: {
      "(max-width: 768px)": {
        slides: {
          perView: 1,
        },
      },
    },
  });

  useEffect(() => {
    let interval: NodeJS.Timeout;
    if (slider.current) {
      interval = setInterval(() => {
        slider.current?.next();
      }, 2500);
    }
    return () => clearInterval(interval);
  }, [slider]);

  return (
    <section id="news" className="py-12 bg-white">
      <div className="max-w-7xl mx-auto px-4">
        <h2 className="text-2xl font-bold text-gray-800 mb-8">
          üì∞ Tin t·ª©c & S·ª± ki·ªán
        </h2>

        {/* B·ªë c·ª•c: Tin l·ªõn b√™n tr√°i, 3 tin nh·ªè b√™n ph·∫£i */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Tin ch√≠nh b√™n tr√°i */}
          <div className="lg:col-span-2">
            <div className="rounded-xl overflow-hidden shadow">
              <img
                src={newsList[0].image}
                alt={newsList[0].title}
                className="w-full h-96 object-cover"
              />
              <div className="bg-white p-6">
                <p className="text-sm text-gray-500">{newsList[0].date}</p>
                <h3 className="text-xl font-bold text-gray-800 mt-1">
                  {newsList[0].title}
                </h3>
                <p className="text-sm text-gray-600 mt-2">
                  {newsList[0].description}
                </p>
              </div>
            </div>
          </div>

          {/* 3 tin ph·ª• b√™n ph·∫£i */}
          <div className="space-y-4">
            {newsList.slice(1, 4).map((news, idx) => (
              <div
                key={idx}
                className="rounded-lg overflow-hidden border shadow"
              >
                <img
                  src={news.image}
                  alt={news.title}
                  className="w-full h-28 object-cover"
                />
                <div className="bg-white p-3">
                  <p className="text-xs text-gray-500">{news.date}</p>
                  <h4 className="text-sm font-semibold text-gray-800">
                    {news.title}
                  </h4>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Ph·∫ßn gi·∫£i th∆∞·ªüng */}
        <h3 className="text-center text-green-700 text-xl font-semibold mt-12 mb-4">
          Ghi nh·∫≠n c·ªßa c·ªông ƒë·ªìng d√†nh cho BIC
        </h3>

        <div
          ref={(ref) => {
            sliderRef.current = ref;
            sliderInstanceRef(ref);
          }}
          className="keen-slider"
        >
          {awards.map((award, index) => (
            <div
              key={index}
              className="keen-slider__slide flex justify-center items-center"
            >
              <Image
                width={200}
                height={200}
                src={award}
                alt={`Award ${index + 1}`}
                className="h-16 object-contain"
              />
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
